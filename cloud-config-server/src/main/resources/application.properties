#server.port=8899
#spring.application.name=cloud-config-server

## By Default, Spring cloud Config Server uses Git as Config Store .
## The default implementation of EnvironmentRepository uses a Git backend,
## which is very convenient for managing upgrades and physical environments and for auditing changes.

## File System Native Config Store
## spring.profiles.active=native
## spring.cloud.config.server.native.searchLocations=C:\\Users\\Sivaprasad_Somarouth\\Documents\\workbench\\workspace\\spring-cloud-micro-services

## Local Git Config Store
## spring.cloud.config.server.git.uri=C:\\Users\\Sivaprasad_Somarouth\\Documents\\workbench\\workspace\\spring-cloud-micro-services
## spring.cloud.config.server.git.search-paths=/cloud-config-store/,/cloud-config-store/{application}

## Git Config Store
## spring.cloud.config.server.git.uri=https://github.com/ssivaprasad/micro-services.git
## spring.cloud.config.server.git.search-paths=/cloud-config-store/shared,/cloud-config-store/{application}
## spring.cloud.config.server.git.search-paths=/cloud-config-store/,/cloud-config-store/{application}
## spring.cloud.config.server.git.username= ${git.username}
## spring.cloud.config.server.git.password=${git.password}


## With VCS-based backends (git, svn), files are checked out or cloned to the local filesystem. 
## By default, they are put in the system temporary directory with a prefix of config-repo-. 
## On linux, for example, it could be /tmp/config-repo-<randomid>. Some operating systems routinely clean out temporary directories. 
## This can lead to unexpected behavior, such as missing properties. 
## To avoid this problem, change the directory that Config Server uses by setting spring.cloud.config.server.git.basedir  to a directory that does not reside in the system temp structure.

## spring.cloud.config.server.git.clone-on-start=true
## spring.cloud.config.server.git.basedir=

## You can set spring.cloud.config.server.accept-empty to false so that Server would return a HTTP 404 status, if the application is not found.By default, this flag is set to true.
## spring.cloud.config.server.accept-empty=false

logging.level.org.springframework.cloud=TRACE